name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:

jobs:
  pre-commit:
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        os: ["ubuntu-22.04", "macos-12", "windows-2019"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3.5.3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.7.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run lint
        uses: ./.github/actions/lint
  tests:
    needs: pre-commit
    strategy:
      matrix:
        python-version: ["3.10"]
        os: ["ubuntu-22.04", "macos-12", "windows-2019"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3.5.3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.7.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Start build cache proxy
        uses: ./.github/actions/buildcache
        env:
          BAZEL_REMOTE_AZBLOB_SHARED_KEY : ${{ secrets.BAZEL_REMOTE_AZBLOB_SHARED_KEY }}
      - name: Run tests
        uses: ./.github/actions/test
  benchmarks:
    needs: tests
    runs-on: "ubuntu-22.04"
    steps:
      - uses: actions/checkout@v3.5.3
      - name: Start build cache proxy
        uses: ./.github/actions/buildcache
        env:
          BAZEL_REMOTE_AZBLOB_SHARED_KEY : ${{ secrets.BAZEL_REMOTE_AZBLOB_SHARED_KEY }}
      - name: Run benchmarks
        uses: ./.github/actions/benchmarks
  wheel:
    runs-on: ubuntu-22.04
    needs: tests
    steps:
      - uses: actions/checkout@v3.5.3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4.7.0
        with:
          python-version: "3.10"
      - name: Upload examples
        uses: actions/upload-artifact@v3.1.2
        with:
          name: examples
          path: examples/*
      - name: Start build cache proxy
        uses: ./.github/actions/buildcache
        env:
          BAZEL_REMOTE_AZBLOB_SHARED_KEY : ${{ secrets.BAZEL_REMOTE_AZBLOB_SHARED_KEY }}
      - name: build wheel
        uses: ./.github/actions/wheel
        with:
          package_version: "0.1.1"
      - name: Upload wheel file
        uses: actions/upload-artifact@v3.1.2
        with:
          name: deepgnn
          path: src/python/dist/*.whl
  tf_examples:
    needs: wheel
    strategy:
      matrix:
        python-version: ["3.10"]
        os: ["ubuntu-22.04"]
    runs-on: ${{ matrix.os }}
    env:
      HOROVOD_WITH_GLOO: 1
      HOROVOD_WITHOUT_MPI: 1
      HOROVOD_WITH_TENSORFLOW: 1
      HOROVOD_WITHOUT_PYTORCH: 1
      HOROVOD_WITHOUT_MXNET: 1
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v3.0.2
        with:
          name: deepgnn
      - name: Download examples
        uses: actions/download-artifact@v3.0.2
        with:
          name: examples
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.7.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tensorflow
        run: pip install --timeout 300 tensorflow==2.13.0
      - name: Install dependencies
        run: pip install --timeout 300 --no-cache-dir -r tensorflow/requirements.txt
      - name: Check horovod features
        run: horovodrun --check-build
      - name: Uninstall cached deepgnn packages
        run: pip uninstall deepgnn-ge deepgnn-tf
      - name: Install wheels
        run: pip install deepgnn_ge*.whl deepgnn_tf*.whl
      - name: Run graphsage examples
        run: cd ./tensorflow/sage/ && sudo chmod +x *.sh && bash ./run.sh CPU && bash ./run.sh CPU disk yes
      - name: Run gcn examples
        run: cd ./tensorflow/gcn/ && sudo chmod +x *.sh && bash ./run.sh CPU cleanup
      - name: Run han examples
        run: cd ./tensorflow/han/ && sudo chmod +x *.sh && bash ./run.sh CPU cleanup
      - name: Run gat examples
        run: cd ./tensorflow/gat/ && sudo chmod +x *.sh && bash ./run.sh CPU cleanup
  torch_examples:
    needs: wheel
    strategy:
      matrix:
        python-version: ["3.10"]
        os: ["ubuntu-22.04"]
    runs-on: ${{ matrix.os }}
    env:
      HOROVOD_WITH_GLOO: 1
      HOROVOD_WITHOUT_MPI: 1
      HOROVOD_WITHOUT_TENSORFLOW: 1
      HOROVOD_WITH_PYTORCH: 1
      HOROVOD_WITHOUT_MXNET: 1
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v3.0.2
        with:
          name: deepgnn
      - name: Download examples
        uses: actions/download-artifact@v3.0.2
        with:
          name: examples
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.7.0
        with:
          python-version: ${{ matrix.python-version }}
      - run: |
          pip install --upgrade pip
          pip install torch==1.13.1 packaging==21.3 setuptools==67.8.0 cmake==3.27.1
          pip install --timeout 300 -r pytorch/requirements.txt
        name: Install dependencies
      - name: Uninstall cached deepgnn packages
        run: pip uninstall deepgnn-ge deepgnn-torch
      - name: Install wheels
        run: pip install deepgnn_ge*.whl deepgnn_torch*.whl
      - name: Run gat examples
        run: cd ./pytorch/gat/ && sudo chmod +x *.sh && bash ./run.sh CPU
      - name: Run pytorch geometric examples
        run: cd ./pytorch/geometric/gat/ && sudo chmod +x *.sh && bash ./run.sh CPU
      - name: Run graphsage supervised examples
        run: cd ./pytorch/graphsage/ && sudo chmod +x *.sh && bash ./run.sh supervised no CPU && bash ./run.sh supervised no CPU disk yes
      - name: Run graphsage unsupervised examples
        run: cd ./pytorch/graphsage/ && sudo chmod +x *.sh && bash ./run.sh unsupervised no CPU
      - name: Run hetgnn examples
        run: cd ./pytorch/hetgnn/ && sudo chmod +x *.sh && bash ./run.sh CPU
      - name: Run AML example
        run: cd ./pytorch/ && sudo chmod +x *.py && python aml.py --unit_test
